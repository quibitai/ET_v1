version: '3.8'

services:
  # Asana MCP Server
  asana-mcp:
    container_name: asana-mcp
    build:
      context: ./mcp-server-asana
    ports:
      - '8002:8000'
    volumes:
      - ./mcp-server-asana:/app
      - ./mcp-server-asana/.credentials:/app/.credentials
      - ./mcp-server-asana/src:/app/src
    environment:
      - ASANA_CLIENT_ID=${ASANA_CLIENT_ID}
      - ASANA_CLIENT_SECRET=${ASANA_CLIENT_SECRET}
      - ASANA_REDIRECT_URI=${ASANA_REDIRECT_URI}
    networks:
      - quibit-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Application (optional - you can also run this separately)
  nextjs-app:
    build: 
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    environment:
      - ASANA_MCP_SERVER_URL=http://asana-mcp:8000/mcp/
      - GOOGLE_WORKSPACE_MCP_URL=http://google-workspace-mcp:8000/mcp/
      - NODE_ENV=development
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      asana-mcp:
        condition: service_healthy
    networks:
      - quibit-network
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quibit-network

  google-workspace-mcp:
    container_name: google-workspace-mcp
    build:
      context: ./mcp-server-google-workspace
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - PORT=8000
      - WORKSPACE_MCP_PORT=8000
      - WORKSPACE_MCP_BASE_URI=http://localhost
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - MCP_SINGLE_USER_MODE=1
      - GOOGLE_CLIENT_SECRETS=/app/client_secret.json
    command: ["python", "main.py", "--single-user", "--transport", "streamable-http", "--tools", "gmail", "drive", "calendar", "docs", "sheets"]
    volumes:
      - ./mcp-server-google-workspace:/app
      - ./credentials:/app/.credentials
    networks:
      - quibit-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  quibit-network:
    driver: bridge 

volumes:
  postgres_data:
  redis_data: 